version: '3'

services:
  postgres_booking:
    image: postgres:12.3-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=booking_system

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO, kafka.producer.async.DefaultEventHandler=INFO, state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://$DOCKERHOST:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPIC_ENABLE: 'true'

  mongodb:
    image: mongo:6.0.8
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  booking-service-app:
    image: booking-service:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres_booking
      - mongodb
      - kafka
      - zookeeper
    environment:
      SPRING_PROFILES_ACTIVE: prod
      APP_CACHE_ENABLE: true
      APP_UPLOADING_MOCK_DATA: "data.json"
      APP_DATE_FORMAT: "dd/MM/yyyy"
      KAFKA_BOOTSTRAP_SERVER: "kafka:9092"
      MONGO_URI: "mongodb://root:root@mongodb:27017/appdatabase?authSource=admin"
      POSTRGES_URI: "jdbc:postgresql://postgres_booking:5432/booking_system"
      POSTGRES_USERNAME: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_SCHEMA: "booking_schema"