plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ru.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.boot:spring-boot-starter-validation")

    //CACHE
    implementation("com.google.guava:guava:32.1.1-jre")


    //OpenAPI
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4")

    //Postgres
    runtimeOnly 'org.postgresql:postgresql'

    //MONGO
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor("org.projectlombok:lombok")

    //CSVWriter
    implementation 'com.opencsv:opencsv:4.1'

    //MapStruct
    implementation("org.mapstruct:mapstruct:1.5.3.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")

    //KAFKA
    implementation 'org.springframework.kafka:spring-kafka'

    //TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.projectlombok:lombok:1.18.26")
    testImplementation("org.testcontainers:junit-jupiter:1.17.6")
    testImplementation("org.testcontainers:postgresql:1.17.6")
    testImplementation("net.javacrumbs.json-unit:json-unit:2.38.0")
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation("org.testcontainers:kafka")

    testImplementation 'org.springframework:spring-test:6.1.3'


    //Security
    implementation("org.springframework.boot:spring-boot-starter-security")
    testImplementation("org.springframework.security:spring-security-test")
}

tasks.named('test') {
    useJUnitPlatform()
}
