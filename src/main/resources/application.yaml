spring:

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}

  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://root:root@localhost:27017/appdatabase?authSource=admin}

  jpa:
    generate-ddl: true
  datasource:
    url: ${POSTRGES_URI:jdbc:postgresql://localhost:5432/booking_system}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    hikari:
      schema: ${POSTGRES_SCHEMA:booking_schema}
      connection-timeout: 10000
      connection-init-sql: CREATE SCHEMA IF NOT EXISTS booking_schema


app:
  uploading:
    mockData: ${APP_UPLOADING_MOCK_DATA:src/main/resources/data/data.json}

    cache:
      enable:  ${APP_CACHE_ENABLE:true}
      properties:
        cache-names:
          - allRooms
          - allRoomsWithFilter
          - roomById
        caches:
          allRooms:
            expiry: 2m
          allRoomsWithFilter:
            expiry: 2m
          roomById:
            expiry: 2m

  dateFormat: ${APP_DATE_FORMAT:"dd/MM/yyyy"}

  kafka:
    kafkaGroupId: "kafka-booking-group-id"
    userTopic: "user-service-topic"
    reservationTopic: "reservation-service-topic"